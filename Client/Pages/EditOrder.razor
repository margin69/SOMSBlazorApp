@page "/editorder/{Id}"
@using SOMSBlazorApp.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime


<h2>Add Order</h2>
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="FirstName"> Order Name *</label>
            <input form="FirstName" class="form-control" @bind="@order.OrderName" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="LastName"> State *</label>
            <input form="LastName" class="form-control" @bind="@order.State" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Email"> Select Window *</label>
            <select for="Publisher" class="form-control"
                    @bind="@order.WindowId">
                <option value=0 disabled selected hidden>
                    [Select Window]
                </option>
                @foreach (var item in windows)
                {
                    <option value="@item.Id">
                        @item.WindowName
                    </option>
                }
            </select>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />
            <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    Order order = new Order();
    List<Window> windows = new List<Window>();
    protected override async Task OnInitializedAsync()
    {
        order = await Http.GetFromJsonAsync<Order>("api/order/" + Id);

        var response = await Http.GetAsync("api/window");
        response.EnsureSuccessStatusCode();
        windows = await response.Content.ReadFromJsonAsync<List<Window>>();

    }
    protected async Task Save()
    {
        var response = await Http.PutAsJsonAsync("api/order/" + Id, @order);
        bool orderResponse = await response.Content.ReadFromJsonAsync<bool>();
        if (orderResponse)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Updated Successfully!");
            NavigationManager.NavigateTo("orderlist");
        }

    }
    void Cancel()
    {
        NavigationManager.NavigateTo("orderlist");
    }

}

