@page "/addelement"
@using SOMSBlazorApp.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h2>Add Element</h2>
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Email"> Select Window *</label>
            <select for="Publisher" class="form-control"
                    @bind="@element.WindowId">
                <option value=0 disabled selected hidden>
                    [Select Window]
                </option>
                @foreach (var item in windows)
                {
                    <option value="@item.Id">
                        @item.WindowName
                    </option>
                }
            </select>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="LastName"> Width *</label>
            <input form="LastName" class="form-control" @bind="@element.Width" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Email"> Height *</label>
            <input form="Email" class="form-control" @bind="@element.Height" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />
            <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>
@code {
    Element element = new Element();
    List<Window> windows = new List<Window>();

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("api/window");
        response.EnsureSuccessStatusCode();
        windows = await response.Content.ReadFromJsonAsync<List<Window>>();
    }
    protected async Task Save()
    {
        var response = await Http.PostAsJsonAsync("api/Element", @element);
        Element elementResponse = await response.Content.ReadFromJsonAsync<Element>();
        if (elementResponse?.Id > 0)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Saved Successfully!");
            NavigationManager.NavigateTo("elementlist");
        }

    }
    void Cancel()
    {
        NavigationManager.NavigateTo("elementlist");
    }

}
